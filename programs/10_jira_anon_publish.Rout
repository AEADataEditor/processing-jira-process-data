
R version 4.2.3 (2023-03-15) -- "Shortstop Beagle"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # Anonymize JIRA process files and construct variables
> # Harry Son
> # 2021-02-17
> 
> ## Inputs: file.path(jirbase,"temp.jira.conf.RDS"), 
> ## Outputs: 
> ### file.path(jirabase,"jira.conf.RDS") and file.path(jirabase,"jira.conf.csv")
> 
> ### Cleans working environment.
> 
> ### Load libraries 
> ### Requirements: have library *here*
> 
> source(here::here("programs","config.R"),echo=TRUE)

> process_raw <- TRUE

> download_raw <- TRUE

> extractday <- "12-09-2023"

> firstday <- "2022-12-01"

> lastday <- "2023-11-30"

> basepath <- here::here()

> setwd(basepath)

> jiraconf <- file.path(basepath, "data", "confidential")

> if (Sys.getenv("HOSTNAME") == "zotique3") {
+     jiraconf <- paste0(Sys.getenv("XDG_RUNTIME_DIR"), "/gvfs/dav:host=dav.box.com,ssl=true/dav/Office  ..." ... [TRUNCATED] 

> jiraanon <- file.path(basepath, "data", "anon")

> jirameta <- file.path(basepath, "data", "metadata")

> images <- file.path(basepath, "images")

> tables <- file.path(basepath, "tables")

> programs <- file.path(basepath, "programs")

> temp <- file.path(basepath, "data", "temp")

> for (dir in list(images, tables, programs, temp)) {
+     if (file.exists(dir)) {
+     }
+     else {
+         dir.create(file.path(dir))
+     }
 .... [TRUNCATED] 

> jira.conf.plus.rds <- file.path(jiraconf, "jira.conf.plus.RDS")

> assignee.lookup.rds <- file.path(jiraconf, "assignee-lookup.RDS")

> mc.lookup.rds <- file.path(jiraconf, "mc-lookup.RDS")
> source(here::here("global-libraries.R"),echo=TRUE)

> ppm.date <- "2023-11-01"

> options(repos = paste0("https://packagemanager.posit.co/cran/", 
+     ppm.date, "/"))

> global.libraries <- c("dplyr", "stringr", "tidyr", 
+     "knitr", "readr", "here", "splitstackshape", "boxr", "jose")

> pkgTest <- function(x) {
+     if (!require(x, character.only = TRUE)) {
+         install.packages(x, dep = TRUE)
+         if (!require(x, charact .... [TRUNCATED] 

> pkgTest.github <- function(x, source) {
+     if (!require(x, character.only = TRUE)) {
+         install_github(paste(source, x, sep = "/"))
+      .... [TRUNCATED] 

> results <- sapply(as.list(global.libraries), pkgTest)
Loading required package: dplyr

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: stringr
Loading required package: tidyr
Loading required package: knitr
Loading required package: readr
Loading required package: here
here() starts at /home/rstudio
Loading required package: splitstackshape
Loading required package: boxr
Loading required package: jose
Loading required package: openssl
Linking to: OpenSSL 3.0.2 15 Mar 2022
> 
> # double-check
> 
> # Read in data extracted from Jira
> #base <- here::here()
> 
> jira.anon.raw <- readRDS(file.path(jiraanon,"temp.jira.anon.RDS")) %>%
+   rename(reason.failure=Reason.for.Failure.to.be.Fully.Reproducible) %>%
+   rename(external=External.validation) %>%
+   rename(subtask=Sub.tasks) %>%
+   mutate(date_created = as.Date(substr(Created, 1,10), "%m/%d/%Y"),
+          date_resolved = as.Date(substr(Resolved, 1,10), "%m/%d/%Y"),
+          date_updated = as.Date(substr(As.Of.Date, 1,10), "%m/%d/%Y")) %>%
+   mutate(received = ifelse(Status=="Open","Yes","No")) %>%
+   mutate(has_subtask=ifelse(subtask!="","Yes","No")) %>%
+   filter(ticket!="AEAREP-365") %>% # duplicate with aearep-364
+   filter(ticket!="AEAREP-1589")  ## Decision notice of aearep-1523
> 
> 
> ## object to filter out subtasks
> jira.conf.subtask <- jira.anon.raw %>%
+   filter(subtask != "") %>%
+   select(ticket, subtask) %>%
+   separate_longer_delim(subtask,delim=",") %>%
+   select(ticket = subtask) %>%
+   distinct()
> 
> jira.anon <- jira.anon.raw %>%
+   filter(!is.na(mc_number_anon)) %>%
+   anti_join(jira.conf.subtask) %>%
+   select(ticket,date_created,date_updated,mc_number_anon,Journal,Status,
+          Software.used,received,Changed.Fields,external,Resolution,reason.failure,
+          MCRecommendation,MCRecommendationV2)
Joining with `by = join_by(ticket)`
> 
> ## export it as a csv file
> saveRDS(jira.anon,file=file.path(jiraanon,"jira.anon.RDS"))
> write.csv(jira.anon,file=file.path(jiraanon,"jira.anon.csv"))
> 
> 
> proc.time()
   user  system elapsed 
  2.220   1.553   2.209 
